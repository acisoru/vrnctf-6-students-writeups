events {
    worker_connections 1024;
}

http {
    init_by_lua_block { require "cjson"; }
    upstream app {
        server api:8001;
    }
    upstream web {
        server client:8003;
    }

    server {
        listen 80;
        location / {
            proxy_pass http://web$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-Ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' '*';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Expose-Headers' '*';
        }
        location /api/ {
            proxy_pass http://app$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-Ip $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' '*';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Expose-Headers' '*';

            access_by_lua_block {
                ngx.req.read_body()
                local ct = ngx.req.get_headers()["Content-Type"]
                if ct == "application/json" then
                    local cjson = require "cjson"
                    local rd = ngx.req.get_body_data()
                    if rd then
                        local d = cjson.decode(rd)

                        for k, v in pairs(d) do
                            local m = ngx.re.match(v, "^[A-Za-z+-_0-9]+$")
                            if m == nil then
                                ngx.exit(ngx.HTTP_FORBIDDEN)
                            end
                        end
                    end
                    ngx.exit(0)
                end

                if ct == "application/x-www-form-urlencoded" then
                    local p, err = ngx.req.get_post_args()
                    if p then
                        for k, v in pairs(p) do
                            local m = ngx.re.match(v, "^[A-Za-z+-_0-9]+$")
                            if m == nil then
                               ngx.exit(ngx.HTTP_FORBIDDEN)
                            end
                        end
                    end
                    ngx.exit(0)
                end
            }
        }
    }
}